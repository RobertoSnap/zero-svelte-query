/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero  ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/BriefHQ/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { default as DrizzleConfigSchema } from "../../drizzle-zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    messageTags: {
      name: "messageTags",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messageTags"]["columns"]["id"]["customType"],
        },
        messageId: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messageTags"]["columns"]["messageId"]["customType"],
        },
        tagId: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messageTags"]["columns"]["tagId"]["customType"],
        },
        createdAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messageTags"]["columns"]["createdAt"]["customType"],
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messageTags"]["columns"]["updatedAt"]["customType"],
        },
      },
      primaryKey: ["id"],
      serverName: "messageTag",
    },
    messages: {
      name: "messages",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messages"]["columns"]["id"]["customType"],
        },
        content: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messages"]["columns"]["content"]["customType"],
        },
        userId: {
          type: "string",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messages"]["columns"]["userId"]["customType"],
        },
        createdAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messages"]["columns"]["createdAt"]["customType"],
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["messages"]["columns"]["updatedAt"]["customType"],
        },
      },
      primaryKey: ["id"],
      serverName: "message",
    },
    tags: {
      name: "tags",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["tags"]["columns"]["id"]["customType"],
        },
        name: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["tags"]["columns"]["name"]["customType"],
        },
        createdAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["tags"]["columns"]["createdAt"]["customType"],
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["tags"]["columns"]["updatedAt"]["customType"],
        },
      },
      primaryKey: ["id"],
      serverName: "tag",
    },
    users: {
      name: "users",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["id"]["customType"],
        },
        name: {
          type: "string",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["name"]["customType"],
        },
        age: {
          type: "number",
          optional: false,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["age"]["customType"],
        },
        createdAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["createdAt"]["customType"],
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType:
            null as (typeof DrizzleConfigSchema)["tables"]["users"]["columns"]["updatedAt"]["customType"],
        },
      },
      primaryKey: ["id"],
      serverName: "user",
    },
  },
  relationships: {
    messages: {
      tags: [
        {
          sourceField: ["id"],
          destField: ["messageId"],
          destSchema: "messageTags",
          cardinality: "many",
        },
        {
          sourceField: ["tagId"],
          destField: ["id"],
          destSchema: "tags",
          cardinality: "many",
        },
      ],
      user: [
        {
          sourceField: ["userId"],
          destField: ["id"],
          destSchema: "users",
          cardinality: "one",
        },
      ],
      messagesToTags: [
        {
          sourceField: ["id"],
          destField: ["messageId"],
          destSchema: "messageTags",
          cardinality: "many",
        },
      ],
    },
    messageTags: {
      message: [
        {
          sourceField: ["messageId"],
          destField: ["id"],
          destSchema: "messages",
          cardinality: "one",
        },
      ],
      tag: [
        {
          sourceField: ["tagId"],
          destField: ["id"],
          destSchema: "tags",
          cardinality: "one",
        },
      ],
    },
    tags: {
      messagesToTags: [
        {
          sourceField: ["id"],
          destField: ["tagId"],
          destSchema: "messageTags",
          cardinality: "many",
        },
      ],
    },
    users: {
      messages: [
        {
          sourceField: ["id"],
          destField: ["userId"],
          destSchema: "messages",
          cardinality: "many",
        },
      ],
    },
  },
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
